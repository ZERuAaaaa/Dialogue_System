<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-G7NLJAM" failures="0" tests="32" name="Surefire test" time="0.111" errors="0" timestamp="2022-04-05T21:33:06 BST">
  <testcase classname="org.multiAgent.AgentTest" name="getPossibility on getPossibility(org.multiAgent.AgentTest)" time="0.016"/>
  <testcase classname="org.multiAgent.AgentTest" name="protocol on protocol(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="updateModel on updateModel(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="getAgreeable1 on getAgreeable1(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="getDvaf on getDvaf(org.multiAgent.AgentTest)" time="0.015"/>
  <testcase classname="org.multiAgent.AgentTest" name="getAgentId on getAgentId(org.multiAgent.AgentTest)" time="0.015"/>
  <testcase classname="org.multiAgent.AgentTest" name="act on act(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="reset on reset(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="getAudiences on getAudiences(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="initializeByTopic on initializeByTopic(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="getAgreeable on getAgreeable(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="getAgreeableAction on getAgreeableAction(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.AgentTest" name="collectAgentInfo on collectAgentInfo(org.multiAgent.AgentTest)" time="0.014"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="broadCast on broadCast(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.008"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="addMessage on addMessage(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.008"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="printLog on printLog(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.008"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="checkClose on checkClose(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.008"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="printLastOne on printLastOne(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.008"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="checkAgreed on checkAgreed(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.007"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="checkDemote on checkDemote(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.007"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="checkMessageExistence on checkMessageExistence(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.007"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="testCheckMessageExistence on testCheckMessageExistence(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.007"/>
  <testcase classname="org.multiAgent.BroadCastCommunication.MessagerTest" name="getLastOne on getLastOne(org.multiAgent.BroadCastCommunication.MessagerTest)" time="0.008"/>
  <testcase classname="org.multiAgent.Models.MatrixTest" name="demote on demote(org.multiAgent.Models.MatrixTest)" time="0.01"/>
  <testcase classname="org.multiAgent.Models.MatrixTest" name="get on get(org.multiAgent.Models.MatrixTest)" time="0.014"/>
  <testcase classname="org.multiAgent.Models.MatrixTest" name="print on print(org.multiAgent.Models.MatrixTest)" time="0.015"/>
  <testcase classname="org.multiAgent.Models.SocialWelfareModelTest" name="getPossibility on getPossibility(org.multiAgent.Models.SocialWelfareModelTest)" time="0.004"/>
  <testcase classname="org.multiAgent.Models.SocialWelfareModelTest" name="demote on demote(org.multiAgent.Models.SocialWelfareModelTest)" time="0.003"/>
  <testcase classname="org.multiAgent.Models.SocialWelfareModelTest" name="update on update(org.multiAgent.Models.SocialWelfareModelTest)" time="0.003"/>
  <testcase classname="org.multiAgent.Models.SocialWelfareModelTest" name="getDistribution on getDistribution(org.multiAgent.Models.SocialWelfareModelTest)" time="0.004"/>
  <testcase classname="org.multiAgent.Models.SocialWelfareModelTest" name="initialize on initialize(org.multiAgent.Models.SocialWelfareModelTest)" time="0.004"/>
  <testcase classname="org.multiAgent.TemplateTest" name="shouldAnswerWithTrue on shouldAnswerWithTrue(org.multiAgent.TemplateTest)" time="0.0"/>
</testsuite> <!-- Surefire test -->
